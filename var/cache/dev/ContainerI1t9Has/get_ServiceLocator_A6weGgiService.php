<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private '.service_locator.a6weGgi' shared service.

return $this->privates['.service_locator.a6weGgi'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'App\\Controller\\AuthentificationController::register' => ['privates', '.service_locator.H3qnu8f', 'get_ServiceLocator_H3qnu8fService.php', true],
    'App\\Controller\\CompteController::new' => ['privates', '.service_locator.7zWnKy7', 'get_ServiceLocator_7zWnKy7Service.php', true],
    'App\\Controller\\PartenaireController::Add' => ['privates', '.service_locator.7zWnKy7', 'get_ServiceLocator_7zWnKy7Service.php', true],
    'App\\Controller\\PartenaireController::modif' => ['privates', '.service_locator.kCjFVm1', 'get_ServiceLocator_KCjFVm1Service.php', true],
    'App\\Controller\\AuthentificationController:register' => ['privates', '.service_locator.H3qnu8f', 'get_ServiceLocator_H3qnu8fService.php', true],
    'App\\Controller\\CompteController:new' => ['privates', '.service_locator.7zWnKy7', 'get_ServiceLocator_7zWnKy7Service.php', true],
    'App\\Controller\\PartenaireController:Add' => ['privates', '.service_locator.7zWnKy7', 'get_ServiceLocator_7zWnKy7Service.php', true],
    'App\\Controller\\PartenaireController:modif' => ['privates', '.service_locator.kCjFVm1', 'get_ServiceLocator_KCjFVm1Service.php', true],
], [
    'App\\Controller\\AuthentificationController::register' => '?',
    'App\\Controller\\CompteController::new' => '?',
    'App\\Controller\\PartenaireController::Add' => '?',
    'App\\Controller\\PartenaireController::modif' => '?',
    'App\\Controller\\AuthentificationController:register' => '?',
    'App\\Controller\\CompteController:new' => '?',
    'App\\Controller\\PartenaireController:Add' => '?',
    'App\\Controller\\PartenaireController:modif' => '?',
]);
